// Code generated by protoc-gen-go. DO NOT EDIT.
// source: prom-system.proto

/*
Package prom_system is a generated protocol buffer package.

It is generated from these files:
	prom-system.proto

It has these top-level messages:
	CreateContainerRequest
	CreateContainerResponse
	DeleteContainerRequest
	DeleteContainerResponse
	ListContainersRequest
	ListContainersResponse
	Container
	CreateReplicasetRequest
	CreateReplicasetResponse
	DeleteReplicasetRequest
	DeleteReplicasetResponse
	ListReplicasetsRequest
	ListReplicasetsResponse
	ScaleReplicasetRequest
	ScaleReplicasetResponse
	Replicaset
*/
package prom_system

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateContainerRequest struct {
	Container        *Container `protobuf:"bytes,1,req,name=container" json:"container,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CreateContainerRequest) Reset()                    { *m = CreateContainerRequest{} }
func (m *CreateContainerRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateContainerRequest) ProtoMessage()               {}
func (*CreateContainerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateContainerRequest) GetContainer() *Container {
	if m != nil {
		return m.Container
	}
	return nil
}

type CreateContainerResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CreateContainerResponse) Reset()                    { *m = CreateContainerResponse{} }
func (m *CreateContainerResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateContainerResponse) ProtoMessage()               {}
func (*CreateContainerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type DeleteContainerRequest struct {
	Container        *Container `protobuf:"bytes,1,req,name=container" json:"container,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *DeleteContainerRequest) Reset()                    { *m = DeleteContainerRequest{} }
func (m *DeleteContainerRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteContainerRequest) ProtoMessage()               {}
func (*DeleteContainerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteContainerRequest) GetContainer() *Container {
	if m != nil {
		return m.Container
	}
	return nil
}

type DeleteContainerResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteContainerResponse) Reset()                    { *m = DeleteContainerResponse{} }
func (m *DeleteContainerResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteContainerResponse) ProtoMessage()               {}
func (*DeleteContainerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ListContainersRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListContainersRequest) Reset()                    { *m = ListContainersRequest{} }
func (m *ListContainersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListContainersRequest) ProtoMessage()               {}
func (*ListContainersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ListContainersResponse struct {
	Containers       []*Container `protobuf:"bytes,1,rep,name=containers" json:"containers,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ListContainersResponse) Reset()                    { *m = ListContainersResponse{} }
func (m *ListContainersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListContainersResponse) ProtoMessage()               {}
func (*ListContainersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListContainersResponse) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type Container struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Image            *string `protobuf:"bytes,3,req,name=image" json:"image,omitempty"`
	Replicaset       *string `protobuf:"bytes,4,opt,name=replicaset" json:"replicaset,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Container) Reset()                    { *m = Container{} }
func (m *Container) String() string            { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()               {}
func (*Container) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Container) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Container) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Container) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

func (m *Container) GetReplicaset() string {
	if m != nil && m.Replicaset != nil {
		return *m.Replicaset
	}
	return ""
}

type CreateReplicasetRequest struct {
	Replicaset       *Replicaset `protobuf:"bytes,1,req,name=replicaset" json:"replicaset,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CreateReplicasetRequest) Reset()                    { *m = CreateReplicasetRequest{} }
func (m *CreateReplicasetRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateReplicasetRequest) ProtoMessage()               {}
func (*CreateReplicasetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateReplicasetRequest) GetReplicaset() *Replicaset {
	if m != nil {
		return m.Replicaset
	}
	return nil
}

type CreateReplicasetResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CreateReplicasetResponse) Reset()                    { *m = CreateReplicasetResponse{} }
func (m *CreateReplicasetResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateReplicasetResponse) ProtoMessage()               {}
func (*CreateReplicasetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type DeleteReplicasetRequest struct {
	Replicaset       *Replicaset `protobuf:"bytes,1,req,name=replicaset" json:"replicaset,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *DeleteReplicasetRequest) Reset()                    { *m = DeleteReplicasetRequest{} }
func (m *DeleteReplicasetRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteReplicasetRequest) ProtoMessage()               {}
func (*DeleteReplicasetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteReplicasetRequest) GetReplicaset() *Replicaset {
	if m != nil {
		return m.Replicaset
	}
	return nil
}

type DeleteReplicasetResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteReplicasetResponse) Reset()                    { *m = DeleteReplicasetResponse{} }
func (m *DeleteReplicasetResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteReplicasetResponse) ProtoMessage()               {}
func (*DeleteReplicasetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type ListReplicasetsRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListReplicasetsRequest) Reset()                    { *m = ListReplicasetsRequest{} }
func (m *ListReplicasetsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListReplicasetsRequest) ProtoMessage()               {}
func (*ListReplicasetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type ListReplicasetsResponse struct {
	Replicasets      []*Replicaset `protobuf:"bytes,1,rep,name=Replicasets" json:"Replicasets,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ListReplicasetsResponse) Reset()                    { *m = ListReplicasetsResponse{} }
func (m *ListReplicasetsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListReplicasetsResponse) ProtoMessage()               {}
func (*ListReplicasetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ListReplicasetsResponse) GetReplicasets() []*Replicaset {
	if m != nil {
		return m.Replicasets
	}
	return nil
}

type ScaleReplicasetRequest struct {
	Replicaset       *Replicaset `protobuf:"bytes,1,req,name=Replicaset" json:"Replicaset,omitempty"`
	NewReplicas      *int32      `protobuf:"varint,2,req,name=newReplicas" json:"newReplicas,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ScaleReplicasetRequest) Reset()                    { *m = ScaleReplicasetRequest{} }
func (m *ScaleReplicasetRequest) String() string            { return proto.CompactTextString(m) }
func (*ScaleReplicasetRequest) ProtoMessage()               {}
func (*ScaleReplicasetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ScaleReplicasetRequest) GetReplicaset() *Replicaset {
	if m != nil {
		return m.Replicaset
	}
	return nil
}

func (m *ScaleReplicasetRequest) GetNewReplicas() int32 {
	if m != nil && m.NewReplicas != nil {
		return *m.NewReplicas
	}
	return 0
}

type ScaleReplicasetResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ScaleReplicasetResponse) Reset()                    { *m = ScaleReplicasetResponse{} }
func (m *ScaleReplicasetResponse) String() string            { return proto.CompactTextString(m) }
func (*ScaleReplicasetResponse) ProtoMessage()               {}
func (*ScaleReplicasetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type Replicaset struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Image            *string `protobuf:"bytes,2,req,name=image" json:"image,omitempty"`
	Replicas         *int32  `protobuf:"varint,3,req,name=replicas" json:"replicas,omitempty"`
	Pods             *int32  `protobuf:"varint,4,opt,name=pods" json:"pods,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Replicaset) Reset()                    { *m = Replicaset{} }
func (m *Replicaset) String() string            { return proto.CompactTextString(m) }
func (*Replicaset) ProtoMessage()               {}
func (*Replicaset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Replicaset) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Replicaset) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

func (m *Replicaset) GetReplicas() int32 {
	if m != nil && m.Replicas != nil {
		return *m.Replicas
	}
	return 0
}

func (m *Replicaset) GetPods() int32 {
	if m != nil && m.Pods != nil {
		return *m.Pods
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateContainerRequest)(nil), "CreateContainerRequest")
	proto.RegisterType((*CreateContainerResponse)(nil), "CreateContainerResponse")
	proto.RegisterType((*DeleteContainerRequest)(nil), "DeleteContainerRequest")
	proto.RegisterType((*DeleteContainerResponse)(nil), "DeleteContainerResponse")
	proto.RegisterType((*ListContainersRequest)(nil), "ListContainersRequest")
	proto.RegisterType((*ListContainersResponse)(nil), "ListContainersResponse")
	proto.RegisterType((*Container)(nil), "Container")
	proto.RegisterType((*CreateReplicasetRequest)(nil), "CreateReplicasetRequest")
	proto.RegisterType((*CreateReplicasetResponse)(nil), "CreateReplicasetResponse")
	proto.RegisterType((*DeleteReplicasetRequest)(nil), "DeleteReplicasetRequest")
	proto.RegisterType((*DeleteReplicasetResponse)(nil), "DeleteReplicasetResponse")
	proto.RegisterType((*ListReplicasetsRequest)(nil), "ListReplicasetsRequest")
	proto.RegisterType((*ListReplicasetsResponse)(nil), "ListReplicasetsResponse")
	proto.RegisterType((*ScaleReplicasetRequest)(nil), "ScaleReplicasetRequest")
	proto.RegisterType((*ScaleReplicasetResponse)(nil), "ScaleReplicasetResponse")
	proto.RegisterType((*Replicaset)(nil), "Replicaset")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ContainerService service

type ContainerServiceClient interface {
	CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerResponse, error)
	DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*DeleteContainerResponse, error)
	ListContainers(ctx context.Context, in *ListContainersRequest, opts ...grpc.CallOption) (*ListContainersResponse, error)
}

type containerServiceClient struct {
	cc *grpc.ClientConn
}

func NewContainerServiceClient(cc *grpc.ClientConn) ContainerServiceClient {
	return &containerServiceClient{cc}
}

func (c *containerServiceClient) CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerResponse, error) {
	out := new(CreateContainerResponse)
	err := grpc.Invoke(ctx, "/ContainerService/CreateContainer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerServiceClient) DeleteContainer(ctx context.Context, in *DeleteContainerRequest, opts ...grpc.CallOption) (*DeleteContainerResponse, error) {
	out := new(DeleteContainerResponse)
	err := grpc.Invoke(ctx, "/ContainerService/DeleteContainer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerServiceClient) ListContainers(ctx context.Context, in *ListContainersRequest, opts ...grpc.CallOption) (*ListContainersResponse, error) {
	out := new(ListContainersResponse)
	err := grpc.Invoke(ctx, "/ContainerService/ListContainers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ContainerService service

type ContainerServiceServer interface {
	CreateContainer(context.Context, *CreateContainerRequest) (*CreateContainerResponse, error)
	DeleteContainer(context.Context, *DeleteContainerRequest) (*DeleteContainerResponse, error)
	ListContainers(context.Context, *ListContainersRequest) (*ListContainersResponse, error)
}

func RegisterContainerServiceServer(s *grpc.Server, srv ContainerServiceServer) {
	s.RegisterService(&_ContainerService_serviceDesc, srv)
}

func _ContainerService_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerServiceServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ContainerService/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerServiceServer).CreateContainer(ctx, req.(*CreateContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerService_DeleteContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerServiceServer).DeleteContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ContainerService/DeleteContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerServiceServer).DeleteContainer(ctx, req.(*DeleteContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerService_ListContainers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContainersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerServiceServer).ListContainers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ContainerService/ListContainers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerServiceServer).ListContainers(ctx, req.(*ListContainersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContainerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ContainerService",
	HandlerType: (*ContainerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateContainer",
			Handler:    _ContainerService_CreateContainer_Handler,
		},
		{
			MethodName: "DeleteContainer",
			Handler:    _ContainerService_DeleteContainer_Handler,
		},
		{
			MethodName: "ListContainers",
			Handler:    _ContainerService_ListContainers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "prom-system.proto",
}

// Client API for ReplicasetService service

type ReplicasetServiceClient interface {
	CreateReplicaset(ctx context.Context, in *CreateReplicasetRequest, opts ...grpc.CallOption) (*CreateReplicasetResponse, error)
	DeleteReplicaset(ctx context.Context, in *DeleteReplicasetRequest, opts ...grpc.CallOption) (*DeleteReplicasetResponse, error)
	ListReplicasets(ctx context.Context, in *ListReplicasetsRequest, opts ...grpc.CallOption) (*ListReplicasetsResponse, error)
	ScaleReplicaset(ctx context.Context, in *ScaleReplicasetRequest, opts ...grpc.CallOption) (*ScaleReplicasetResponse, error)
}

type replicasetServiceClient struct {
	cc *grpc.ClientConn
}

func NewReplicasetServiceClient(cc *grpc.ClientConn) ReplicasetServiceClient {
	return &replicasetServiceClient{cc}
}

func (c *replicasetServiceClient) CreateReplicaset(ctx context.Context, in *CreateReplicasetRequest, opts ...grpc.CallOption) (*CreateReplicasetResponse, error) {
	out := new(CreateReplicasetResponse)
	err := grpc.Invoke(ctx, "/ReplicasetService/CreateReplicaset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicasetServiceClient) DeleteReplicaset(ctx context.Context, in *DeleteReplicasetRequest, opts ...grpc.CallOption) (*DeleteReplicasetResponse, error) {
	out := new(DeleteReplicasetResponse)
	err := grpc.Invoke(ctx, "/ReplicasetService/DeleteReplicaset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicasetServiceClient) ListReplicasets(ctx context.Context, in *ListReplicasetsRequest, opts ...grpc.CallOption) (*ListReplicasetsResponse, error) {
	out := new(ListReplicasetsResponse)
	err := grpc.Invoke(ctx, "/ReplicasetService/ListReplicasets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicasetServiceClient) ScaleReplicaset(ctx context.Context, in *ScaleReplicasetRequest, opts ...grpc.CallOption) (*ScaleReplicasetResponse, error) {
	out := new(ScaleReplicasetResponse)
	err := grpc.Invoke(ctx, "/ReplicasetService/ScaleReplicaset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReplicasetService service

type ReplicasetServiceServer interface {
	CreateReplicaset(context.Context, *CreateReplicasetRequest) (*CreateReplicasetResponse, error)
	DeleteReplicaset(context.Context, *DeleteReplicasetRequest) (*DeleteReplicasetResponse, error)
	ListReplicasets(context.Context, *ListReplicasetsRequest) (*ListReplicasetsResponse, error)
	ScaleReplicaset(context.Context, *ScaleReplicasetRequest) (*ScaleReplicasetResponse, error)
}

func RegisterReplicasetServiceServer(s *grpc.Server, srv ReplicasetServiceServer) {
	s.RegisterService(&_ReplicasetService_serviceDesc, srv)
}

func _ReplicasetService_CreateReplicaset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReplicasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicasetServiceServer).CreateReplicaset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ReplicasetService/CreateReplicaset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicasetServiceServer).CreateReplicaset(ctx, req.(*CreateReplicasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReplicasetService_DeleteReplicaset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReplicasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicasetServiceServer).DeleteReplicaset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ReplicasetService/DeleteReplicaset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicasetServiceServer).DeleteReplicaset(ctx, req.(*DeleteReplicasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReplicasetService_ListReplicasets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReplicasetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicasetServiceServer).ListReplicasets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ReplicasetService/ListReplicasets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicasetServiceServer).ListReplicasets(ctx, req.(*ListReplicasetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReplicasetService_ScaleReplicaset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScaleReplicasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicasetServiceServer).ScaleReplicaset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ReplicasetService/ScaleReplicaset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicasetServiceServer).ScaleReplicaset(ctx, req.(*ScaleReplicasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReplicasetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ReplicasetService",
	HandlerType: (*ReplicasetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateReplicaset",
			Handler:    _ReplicasetService_CreateReplicaset_Handler,
		},
		{
			MethodName: "DeleteReplicaset",
			Handler:    _ReplicasetService_DeleteReplicaset_Handler,
		},
		{
			MethodName: "ListReplicasets",
			Handler:    _ReplicasetService_ListReplicasets_Handler,
		},
		{
			MethodName: "ScaleReplicaset",
			Handler:    _ReplicasetService_ScaleReplicaset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "prom-system.proto",
}

func init() { proto.RegisterFile("prom-system.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xc1, 0x6e, 0x9b, 0x40,
	0x10, 0x86, 0x81, 0xc4, 0x52, 0x3d, 0x96, 0xd2, 0x64, 0xd4, 0x9a, 0x0d, 0x87, 0x0a, 0x71, 0xb2,
	0x5a, 0x65, 0x0f, 0x7e, 0x84, 0x3a, 0xb2, 0x5a, 0xa9, 0x27, 0xf2, 0x04, 0xc8, 0x9e, 0x46, 0x48,
	0x36, 0x50, 0x96, 0xb6, 0xea, 0xa3, 0xf5, 0x89, 0xfa, 0x1a, 0x15, 0x0b, 0xbb, 0xac, 0x77, 0x97,
	0x5c, 0x72, 0x83, 0x19, 0xf8, 0x47, 0xf3, 0xcf, 0xf7, 0xc3, 0x5d, 0xd3, 0xd6, 0xe7, 0x07, 0xf1,
	0x47, 0x74, 0x74, 0xe6, 0x4d, 0x5b, 0x77, 0x75, 0xf6, 0x19, 0xd6, 0xbb, 0x96, 0x8a, 0x8e, 0x76,
	0x75, 0xd5, 0x15, 0x65, 0x45, 0x6d, 0x4e, 0x3f, 0x7e, 0x92, 0xe8, 0x70, 0x03, 0xcb, 0x83, 0xaa,
	0xb1, 0x30, 0x8d, 0x36, 0xab, 0x2d, 0xf0, 0xe9, 0xab, 0xa9, 0x99, 0xdd, 0x43, 0xec, 0x68, 0x88,
	0xa6, 0xae, 0x04, 0xf5, 0xf2, 0x8f, 0x74, 0xa2, 0xd7, 0xca, 0x3b, 0x1a, 0xa3, 0x7c, 0x0c, 0xef,
	0xbf, 0x95, 0xa2, 0xd3, 0x0d, 0x31, 0xaa, 0x67, 0x8f, 0xb0, 0xb6, 0x1b, 0xc3, 0x2f, 0xf8, 0x11,
	0x40, 0x4b, 0x0b, 0x16, 0xa6, 0x57, 0xd6, 0x60, 0xa3, 0x9b, 0x11, 0x2c, 0x75, 0x03, 0x6f, 0x20,
	0x2a, 0x8f, 0x2c, 0x4c, 0xc3, 0xcd, 0x32, 0x8f, 0xca, 0x23, 0x22, 0x5c, 0x57, 0xc5, 0x99, 0x58,
	0x94, 0x46, 0x9b, 0x65, 0x2e, 0x9f, 0xf1, 0x1d, 0x2c, 0xca, 0x73, 0xf1, 0x4c, 0xec, 0x4a, 0x16,
	0x87, 0x17, 0xfc, 0x00, 0xd0, 0x52, 0x73, 0x2a, 0x0f, 0x85, 0xa0, 0x8e, 0x5d, 0x4b, 0x05, 0xa3,
	0x92, 0xed, 0x95, 0x7f, 0xb9, 0xae, 0x29, 0x97, 0x3e, 0x5d, 0xfc, 0x3a, 0xd8, 0xb4, 0xe2, 0xc6,
	0x77, 0xa6, 0x4e, 0x02, 0xcc, 0xd5, 0x19, 0x9d, 0xda, 0x2b, 0x13, 0x5f, 0x3f, 0xc3, 0xd5, 0x19,
	0x67, 0xb0, 0xc1, 0xf4, 0xa9, 0xa3, 0xcf, 0xf1, 0x05, 0x62, 0xa7, 0x33, 0xde, 0xe3, 0x01, 0x56,
	0x46, 0x79, 0x3c, 0xc8, 0xc5, 0x78, 0xb3, 0x9f, 0x3d, 0xc3, 0xfa, 0xe9, 0x50, 0x9c, 0xfc, 0x6b,
	0xe4, 0x2f, 0xaf, 0x31, 0x3d, 0x63, 0x0a, 0xab, 0x8a, 0x7e, 0xab, 0x82, 0xbc, 0xe1, 0x22, 0x37,
	0x4b, 0x3d, 0x75, 0xce, 0xa0, 0x71, 0xcf, 0xef, 0xe6, 0x24, 0xcd, 0x41, 0xe8, 0xe3, 0x20, 0x32,
	0x39, 0x48, 0xe0, 0x8d, 0x72, 0x52, 0x02, 0xb2, 0xc8, 0xf5, 0x7b, 0xaf, 0xd2, 0xd4, 0x47, 0x21,
	0xe9, 0x58, 0xe4, 0xf2, 0x79, 0xfb, 0x2f, 0x84, 0x5b, 0xcd, 0xdf, 0x13, 0xb5, 0xbf, 0xca, 0x03,
	0xe1, 0x1e, 0xde, 0x5a, 0x61, 0xc3, 0x98, 0xfb, 0x23, 0x9c, 0x30, 0x3e, 0x97, 0xcb, 0xa0, 0xd7,
	0xb1, 0x52, 0x85, 0x31, 0xf7, 0x67, 0x35, 0x61, 0x7c, 0x2e, 0x80, 0x01, 0xee, 0xe0, 0xe6, 0x32,
	0x69, 0xb8, 0xe6, 0xde, 0x4c, 0x26, 0x31, 0xf7, 0x47, 0x32, 0x0b, 0xb6, 0x7f, 0x23, 0xb8, 0x9b,
	0x2c, 0x55, 0xab, 0x7e, 0x85, 0x5b, 0x9b, 0x67, 0x54, 0x2b, 0x39, 0xf7, 0x4f, 0xee, 0xf9, 0x2c,
	0xfc, 0x41, 0x2f, 0x65, 0x63, 0x8b, 0x6a, 0x2b, 0x9f, 0xd4, 0x2c, 0xe3, 0xd2, 0x38, 0x8b, 0x65,
	0x1c, 0x36, 0x73, 0xb9, 0x4f, 0x18, 0x9f, 0xc1, 0x7e, 0xd0, 0xb1, 0x00, 0xc3, 0x98, 0xfb, 0xd9,
	0x4e, 0x18, 0x9f, 0x63, 0x31, 0xf8, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x52, 0x9e, 0xc2, 0x51, 0xd5,
	0x05, 0x00, 0x00,
}
